# 1480. Running Sum of 1d Array 

""" 
Description: 
Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]â€¦nums[i]).

Return the running sum of nums. 
"""

"""
Example:

Input: nums = [1,2,3,4]
Output: [1,3,6,10]
Explanation: Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4].
"""
####### Method 1:

class Solution:
    def runningSum(self, nums: List[int]) -> List[int]:
        result = [nums[0]]
        for i in range(2,len(nums)+1):
            sum = nums[0]
            for j in range(1,i):
                sum = sum + nums[j]
            result.append(sum)
        return result

######## Method 2: (Brute Force)

def runningSum(self, nums: List[int]) -> List[int]:
   return [sum(nums[:i+1]) for i in range(len(nums))]

######## Method 3: 

def runningSum(self, nums: List[int]) -> List[int]:
    #our answer array starts with nums[0], which is the 0th running sum
	runSum = [nums[0]] 
	for i in range(1,len(nums)):
        #the running sum up to index i is the sum of nums[i] and the running sum up to index i-1
		runSum.append(runSum[i-1]+nums[i]) 
	return runSum

######## Method 3: 

def runningSum(self, nums: List[int]) -> List[int]:
	for i in range(1,len(nums)):
		nums[i] = nums[i-1] + nums[i]
	return nums
